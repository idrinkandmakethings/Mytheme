@using BlazorTypography
@using Mytheme.Data
@inherits LayoutComponentBase

@inject SvgHelperService SvgHelperService
@inject NavigationManager NavigationManager

@inject IStyled Styled
@inject ITypography Typography


<Styled>
    html {
    color: {colors.text-color};
    }
    body {
    background-color: {colors.background-color};
    color: {colors.text-color};
    }
    p {
    color: {colors.text-color};
    }
    hr {
    background-color: {colors.hr};
    }
    h1 {
        margin-top: 20px;
        margin-bottom: 20px;
    }

</Styled>


<Styled @bind-Classname="@sideNav">

    height: 100%;
    width: @navWidth;
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    background-color: #111;
    overflow-x: hidden;
    padding-top: 60px;
    transition: 0.5s;

    & a {
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    font-size: 25px;
    color: #818181;
    display: block;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    transition: 0.3s;
    }

    & a:hover {
    color: #f1f1f1;
    }

    & .closeBtn{
    padding: 8px 8px 8px 32px;
    font-size: 25px;
    color: #818181;
    display: block;
    white-space: nowrap;
    position: absolute;
    font-weight: bold;
    cursor: pointer;
    top: 0;
    right: 25px;
    font-size: 36px;
    margin-left: 50px;
    }
</Styled>


<Styled @bind-Classname="@topNav">
    width: 100%;
    background-color: #555;
    overflow: auto;
    position: fixed;
    top: 0;
</Styled>

<Styled @bind-Classname="@topNavComponents">
    margin: 0;
    float: left;
    padding: 12px;
    color: white;
    text-decoration: none;
    font-size: 24px;

    & a:hover {
    background-color: #000;
    }
</Styled>

<Styled Classname="@topNav" MediaQuery="MediaQueries.LargerThanTablet">
    a {
    float: none;
    display: block;
    }
</Styled>

<Styled @bind-Classname="@mainView">
    margin-top: 40px;
    padding: 20px 30px;
</Styled>

<MythemeModal/>

<div class="@sideNav">
    <span class="closeBtn" @onclick="@CloseNav">&times;</span>
    <a href="#" @onclick="@(e => OnNavlinkClicked(""))">Home</a>
    <a href="tables" @onclick="@(e => OnNavlinkClicked("Tables"))">Tables</a>
    <a href="add-table" @onclick="@(e => OnNavlinkClicked("Add Table"))">Add Table</a> 
</div>

<div class="@topNav">
    <a @onclick="OpenNav" class="@topNavComponents">@SvgHelperService.GetMenu(26, "fill: white")</a>
    <p class="@topNavComponents">@breadCrumb</p>
</div>


<div class="@mainView">
    @Body
</div>


@code {
    private string topNav, topNavComponents, sideNav, mainView, closeBtn;
    private string navWidth = "0px";
    private string breadCrumb = "";


    protected void OpenNav()
    {
        navWidth = "260px";
        StateHasChanged();
    }

    protected void CloseNav()
    {
        navWidth = "0px";
        StateHasChanged();
    }

    protected void OnNavlinkClicked(string title)
    {
        breadCrumb = title;
    }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += LocationChanged;

        var theme = new BlazorTypography.Themes.Stardust();
        Typography.ApplyTypography(theme);

        //Setup default theme
        Styled.SetThemeValue("colors.background-color", "#F8F6ED");
        Styled.SetThemeValue("colors.brand", "#727D71");
        Styled.SetThemeValue("colors.link-color", "#974442");
        Styled.SetThemeValue("colors.link-active-color", "#727D71");
        Styled.SetThemeValue("colors.text-color", "#333333");
        Styled.SetThemeValue("colors.code-background", "#263238");
        Styled.SetThemeValue("colors.code-text", "#C792EA");
        Styled.SetThemeValue("colors.hr", "#974442");
    }

    private void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        navWidth = "0px";
        StateHasChanged();
    }
}
