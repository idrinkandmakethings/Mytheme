<Styled @bind-Classname="@modal">
    display: @modalDisplay;
    position: fixed;
    z-index: 1;
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0,0.4);
</Styled>


<Styled @bind-Classname="@modalContent">
    position: relative;
    background-color: #fefefe;
    margin: auto;
    padding: 0;
    border: 1px solid #888;
    width: 80%;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    animation-name: @animateTop;
    animation-duration: 0.4s;
</Styled>

<Styled @bind-Classname="@animateTop" IsKeyframes="true">
    from {
        top:-300px; 
        opacity:0;
    }
    to {
        top:0; 
        opacity:1;
    }
</Styled>

<Styled @bind-Classname="@modalHeader">
    padding: 2px 16px;
    background-color: #5cb85c;
    color: white;
    font-weight: bold;
</Styled>

<Styled @bind-Classname="@modalBody">
    padding: 2px 16px;
</Styled>

<Styled @bind-Classname="@modalFooter">
    padding: 2px 16px;
    background-color: #5cb85c;
    color: white;
</Styled>


<div class="@modal">

    <!-- Modal content -->
    <div class="@modalContent">
        <div class="@modalHeader">
            @Title
        </div>
        <div class="@modalBody">
            <InputText id="name" @bind-Value="entry" />
        </div>
        <div class="@modalFooter">
            <button @onclick="Hide">Cancel</button>
            <button @onclick="OnOk">@AckButtonText</button>
        </div>
    </div>
</div>


@code {
    private string modal, modalContent, modalHeader, modalBody, modalFooter, closeModal, animateTop;

    private string modalDisplay = "none";

    private string entry;

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string AckButtonText { get; set; }

    [Parameter]
    public EventCallback<string> OnAcknowledge { get; set; }

    protected async void OnOk()
    {
        await OnAcknowledge.InvokeAsync(entry);
        modalDisplay = "none";
        StateHasChanged();
    }

    protected void Hide()
    {
        modalDisplay = "none";
        StateHasChanged();
    }

    public void Show()
    {
        modalDisplay = "block";
        StateHasChanged();
    }
}
