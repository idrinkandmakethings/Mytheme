@page "/"
@using Mytheme.Dal.Dto
@using Mytheme.Services
@using Mytheme.Services.Interfaces

@inject BreadcrumbService BreadcrumbService
@inject NavigationManager NavigationManager
@inject ISectionService SectionService

<Styled @bind-Classname="@title">
    height: 30%;
    width: 100%;
</Styled>

<Styled @bind-Classname="@subTitle">
    @@media screen and (max-height: 520px){
     display: none;
    }
</Styled>

<Styled @bind-Classname="@campaignSelector">
    background: lightblue;
    height: 70%;
    width: 100%;
</Styled>

<Styled @bind-Classname="@row">
    display: flex;
    height: 100%;
</Styled>

<Styled @bind-Classname="@columnLeft">
    width: 256px;
    height: 100%;
</Styled>

<Styled @bind-Classname="@columnRight">
    flex-grow: 1;
    height: 100%;
</Styled>

<Styled @bind-Classname="@subRow">
    display: flex;
    margin: auto;
    width: 100%;
    height: 100%;
    flex-direction: column;
    & img {
    width: 100px;
    height: 100px;
    margin: auto;
    }
</Styled>

<Styled @bind-Classname="@subColumnUpper">
    margin: auto;
    flex-grow: 1;
    width: 100%;
</Styled>

<Styled @bind-Classname="@subColumnLower">
    height: 100px;
    width: 100%;
</Styled>

<Styled @bind-Classname="@button">
    height: 100%;
    width: 100%;
    position: relative;
    background-color: #4CAF50;
    border: none;
    color: white;
    text-decoration: none;
    display: inline-block;
    font-size: 28px;
    cursor: pointer;
</Styled>


<Styled @bind-Classname="@buttonLabel">
    margin: 0;
    width: 100%;
    text-align:center;
    overflow-wrap: normal;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
</Styled>




<div class="@title">
    <h1>Mytheme</h1>
    <p class="@subTitle">/ˈmɪθiːm/ (noun) a set of fundamental generic units of narrative structure from which myths are thought to be constructed.</p>
</div>
<div class="@campaignSelector">
    <div class="@row">
        <div class="@columnLeft" style="background-color:#aaa;">
            <div class="@subRow">
                <div class="@subColumnUpper" style="background-color:#aa0;">
                    <a href=""><img src="/images/new_campaign.png" /></a>
                </div>
                <div class="@subColumnLower" style="">
                    <a class="@button" href="section">
                        <div class="@buttonLabel">New Campaign</div>
                    </a>
                </div>
            </div>
        </div>
        <div class="@columnRight" style="background-color:#bbb;">
            @if (campaigns != null)
            {
                <Grid Items="campaigns" Context="campaign">
                    <GridHeader>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Created</th>
                    </GridHeader>
                    <GridRow>
                        <tr @onclick="@(() => NavigationManager.NavigateTo($"section/{campaign.Id}"))">
                            <td>@campaign.Name</td>
                            <td>@campaign.Description</td>
                            <td>@campaign.DateCreated.ToShortDateString()</td>
                        </tr>
                    </GridRow>
                </Grid>
            }
            else
            {
                <div>
                    Loading...
                </div>
            }
        </div>
    </div>
</div>

@code
{
    private string title, subTitle, campaignSelector, row, columnLeft, columnRight, subRow, subColumnUpper, subColumnLower;

    private string button, buttonLabel;

    private Section[] campaigns;



    protected override async Task OnInitializedAsync()
    {
        campaigns = (await SectionService.GetAllCampaignsAsync()).Result;


        BreadcrumbService.SetBreadCrumb("", "", false);
        BreadcrumbService.ClearHistory();
        BreadcrumbService.NavBarButtons.Clear();
    }

}
