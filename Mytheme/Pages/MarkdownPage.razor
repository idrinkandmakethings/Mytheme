@using Mytheme.Data.Dto
@using Mytheme.Models
@using Mytheme.Services
@using Mytheme.Services.Interfaces

@inject SvgHelperService SvgHelperService
@inject IJSRuntime JsRuntime
@inject ISectionService SectionService
@inject IModalService ModalService


@if (CurrentPage != null)
{
    <TabbedMarkdownEditor OnSaveEdit="@SaveEdit" Content="@CurrentPage.Content" PercentHeight="90" @ref="@markdown"></TabbedMarkdownEditor>
}

@code {

    private TabbedMarkdownEditor markdown;

    [Parameter]
    public EventCallback<NavigationLink> OnNavigate { get; set; }

    [Parameter]
    public Page CurrentPage { get; set; }

    public string Content { get; set; }


    private async void SaveEdit(string content)
    {
        await Save();
    }

    public async Task Save()
    {
        CurrentPage.Content = markdown.Content;

        var result = await SectionService.UpdatePageAsync(CurrentPage);
        if (!result.IsSuccess)
        {
            ModalService.ShowInfoModal($"Error Saving Page", result.Message);
        }
    }
}