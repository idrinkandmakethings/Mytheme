@page "/tables"
@using Mytheme.ButtonGroup
@using Mytheme.Dal
@using Mytheme.Dal.Dto
@using Mytheme.Data

@inject RandomTableService RandomTableService
@inject NavigationManager NavigationManager
@inject BreadcrumbService BreadcrumbService

<MythemeButtonGroup Buttons="buttons" />
<br />
<br />
@if (tables == null)
{
    <p><em>@loadingText</em></p>
}
else
{
    <MythemeGrid Items="tables" Context="table">
        <GridHeader>
            <th>Name</th>
            <th>Category</th>
            <th>Description</th>
        </GridHeader>
        <GridRow>
            <tr @onclick="@(() => NavigationManager.NavigateTo($"edit-table/{table.Name}"))">
                <td>@table.Name</td>
                <td>@table.Category</td>
                <td>@table.Description</td>
            </tr>
        </GridRow>
    </MythemeGrid>
}

@code {
    RandomTable[] tables;
    List<ButtonOptions> buttons; 

    private string loadingText = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        BreadcrumbService.SetBreadCrumb("Tables");
      
        buttons = new List<ButtonOptions>
        {
            new ButtonOptions("Add Table", () => { NavigationManager.NavigateTo($"edit-table"); }),
            new ButtonOptions("Import Table", null)
        };
        
        var result = await RandomTableService.GetAllRandomTables();

        if (result.Status == DalStatus.Success)
        {
            tables = result.Result;
        }
    }
}
